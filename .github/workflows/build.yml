name: 🔨 Build and Test

on:
  push:
    branches: [ main, master, develop ]
    paths-ignore:
      - '**.md'
      - 'documents/**'
      - '.gitignore'
  
  pull_request:
    branches: [ main, master, develop ]
    paths-ignore:
      - '**.md'
      - 'documents/**'
      - '.gitignore'

  workflow_dispatch:

env:
  JAVA_VERSION: '17'
  ANDROID_COMPILE_SDK: '34'
  ANDROID_BUILD_TOOLS: '34.0.0'

jobs:
  test:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: 📱 Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: 🐘 Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: 🔧 Make gradlew executable
        run: chmod +x ./gradlew

      - name: 🧪 Run Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: 📊 Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ github.run_number }}
          path: app/build/reports/tests/

  lint:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: 📱 Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: 🐘 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🔧 Make gradlew executable
        run: chmod +x ./gradlew

      - name: 🔍 Run Lint
        run: ./gradlew lintDebug

      - name: 📊 Upload Lint Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-results-${{ github.run_number }}
          path: app/build/reports/lint-results-debug.html

  build-debug:
    name: 🔨 Build Debug APK
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: 📱 Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: 🐘 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🔧 Make gradlew executable
        run: chmod +x ./gradlew

      - name: 🔨 Build Debug APK
        run: ./gradlew assembleDebug

      - name: 📦 Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: sourceworx-dms-debug-${{ github.run_number }}
          path: app/build/outputs/apk/debug/*.apk

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔒 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: 📊 Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  notify:
    name: 📢 Build Status
    runs-on: ubuntu-latest
    needs: [test, lint, build-debug]
    if: always()
    
    steps:
      - name: 📢 Build Status
        run: |
          if [[ "${{ needs.test.result }}" == "success" && "${{ needs.lint.result }}" == "success" && "${{ needs.build-debug.result }}" == "success" ]]; then
            echo "✅ All checks passed! Build is ready for merge."
          else
            echo "❌ Some checks failed. Please review the results."
            echo "Tests: ${{ needs.test.result }}"
            echo "Lint: ${{ needs.lint.result }}"
            echo "Build: ${{ needs.build-debug.result }}"
          fi
